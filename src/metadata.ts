/* eslint-disable */
export default async () => {
    const t = {
        ["./models/user.entity"]: await import("./models/user.entity"),
        ["./modules/security/auth/auth.dto"]: await import("./modules/security/auth/auth.dto"),
        ["./modules/security/user/user.dto"]: await import("./modules/security/user/user.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/security/user/user.dto"), { "CreateUserDto": { fullName: { required: true, type: () => String, minLength: 2, maxLength: 30 }, email: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 6, maxLength: 30, pattern: "atLeastOneCapitalLetter" }, type: { required: true, type: () => Object } }, "UpdateUserDto": { id: { required: true, type: () => String }, fullName: { required: false, type: () => String, minLength: 2, maxLength: 30 }, email: { required: false, type: () => String }, type: { required: false, type: () => Object }, password: { required: false, type: () => String, minLength: 6, maxLength: 30, pattern: "atLeastOneCapitalLetter" } }, "UpdateMyProfileDto": { fullName: { required: true, type: () => String, minLength: 2, maxLength: 30 }, email: { required: true, type: () => String } }, "SignUpUserDto": { fullName: { required: true, type: () => String, minLength: 2, maxLength: 30 }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 6, maxLength: 30, pattern: "atLeastOneCapitalLetter" } }, "UserResponseDto": { id: { required: true, type: () => String }, fullName: { required: true, type: () => String }, email: { required: true, type: () => String } } }], [import("./models/base-model.entity"), { "BaseModel": { id: { required: true, type: () => String }, deletedAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date } } }], [import("./models/user.entity"), { "User": { fullName: { required: true, type: () => String }, email: { required: true, type: () => String }, isActivated: { required: false, type: () => Boolean }, phone: { required: true, type: () => String }, type: { required: true, type: () => Object }, password: { required: true, type: () => String }, lastForcedLogout: { required: true, type: () => Date } } }], [import("./modules/security/auth/auth.dto"), { "LoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 6, maxLength: 30 } }, "ILoginCredentialsDto": { user: { required: true, type: () => t["./models/user.entity"].User }, token: { required: true, type: () => String } } }], [import("./models/log.entity"), { "Log": { resource: { required: true, type: () => String }, resourceId: { required: true, type: () => String }, action: { required: true, type: () => String }, data: { required: true, type: () => String }, executingUser: { required: true, type: () => t["./models/user.entity"].User } } }], [import("./modules/security/log/log.dto"), { "CreateLogDto": { resource: { required: true, type: () => String }, resourceId: { required: true, type: () => String }, action: { required: true, type: () => String }, executingUser: { required: true, type: () => t["./models/user.entity"].User } } }], [import("./helpers/helper.dto"), { "IdRequired": { id: { required: true, type: () => String } }, "IdOptional": { id: { required: true, type: () => String } } }], [import("./models/banned-token.entity"), { "BannedToken": { token: { required: true, type: () => String }, type: { required: true, type: () => String } } }], [import("./models/error.entity"), { "UnhandledErrorData": { id: { required: true, type: () => String }, data: { required: true, type: () => String }, createdAt: { required: true, type: () => Date } } }]], "controllers": [[import("./modules/security/auth/auth.controller"), { "AuthController": { "adminLogin": { type: t["./modules/security/auth/auth.dto"].ILoginCredentialsDto }, "login": { type: t["./modules/security/auth/auth.dto"].ILoginCredentialsDto }, "signup": { type: t["./modules/security/auth/auth.dto"].ILoginCredentialsDto } } }], [import("./modules/security/user/user.controller"), { "UserController": { "create": { type: t["./modules/security/user/user.dto"].UserResponseDto }, "update": {}, "get": { type: t["./modules/security/user/user.dto"].UserResponseDto }, "getAll": {}, "delete": {} } }]] } };
};